#!/usr/bin/env ruby

require 'bundler'
require 'optparse'
Dir['recipe/*.rb'].each { |f| puts File.expand_path(f); require File.expand_path(f) }

options = {}
optparser = OptionParser.new do |opts|
  opts.banner = "USAGE: binary-builder [options] (A checksum method is required)"

  opts.on("-nNAME","--name=NAME", "Name of the binary e.g. nginx") do |n|
    options[:name] = n
  end
  opts.on( "-vVERSION","--version=VERSION", "Version of the binary e.g. 1.7.11") do |n|
    options[:version] = n
  end
  opts.on("--sha256=SHA256", "SHA256 of the binary ") do |n|
    options[:sha256] = n
  end
  opts.on("--md5=MD5", "MD5 of the binary ") do |n|
    options[:md5] = n
  end
  opts.on("--gpg-rsa-key-id=RSA_KEY_ID", "RSA Key Id e.g. 10FDE075") do |n|
    options[:gpg] ||= {}
    options[:gpg][:key_id] = n
  end
  opts.on("--gpg-signature=ASC_KEY", "content of the .asc file") do |n|
    options[:gpg] ||= {}
    options[:gpg][:signature] = n
  end
end
optparser.parse!


unless options[:name] && options[:version] && (
    options[:sha256] ||
    options[:md5] ||
    (options[:gpg][:signature] && options[:gpg][:key_id])
)
  raise optparser.help
end


def composed_recipe(klass, options = {})
  checksum_type = ([:md5, :sha256, :gpg] & options.keys).first
  recipe = klass.new(options[:name], options[:version])
  recipe.files << {
    url: recipe.url,
    checksum_type => options[checksum_type]
  }
  Bundler.with_clean_env { recipe.cook }
  recipe
end

case options[:name]
  when "ruby"
    composed_recipe(RubyRecipe, options)
  when "node"
    composed_recipe(NodeRecipe, options)
  when "jruby"
    OpenJDK7Recipe.new('openjdk', '7').cook
    maven = composed_recipe(MavenRecipe, {name: 'maven', version: '3.3.3', md5: '794b3b7961200c542a7292682d21ba36'})
    maven.activate
    composed_recipe(JRubyRecipe, options)
end



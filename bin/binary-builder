#!/usr/bin/env ruby

require 'bundler'
require 'optparse'
require_relative '../recipe/ruby'
require_relative '../recipe/node'

options = {}
optparser = OptionParser.new do |opts|
  opts.banner = "USAGE: binary-builder [options] (A checksum method is required)"

  opts.on("-nNAME","--name=NAME", "Name of the binary e.g. nginx") do |n|
    options[:binary_name] = n
  end
  opts.on( "-vVERSION","--version=VERSION", "Version of the binary e.g. 1.7.11") do |n|
    options[:binary_version] = n
  end
  opts.on("--sha256=SHA256", "SHA256 of the binary ") do |n|
    options[:sha256] = n
  end
  opts.on("--md5=MD5", "MD5 of the binary ") do |n|
    options[:md5] = n
  end
  opts.on("--gpg-rsa-key-id=RSA_KEY_ID", "RSA Key Id e.g. 10FDE075") do |n|
    options[:gpg] ||= {}
    options[:gpg][:key_id] = n
  end
  opts.on("--gpg-signature=ASC_KEY", "content of the .asc file") do |n|
    options[:gpg] ||= {}
    options[:gpg][:signature] = n
  end
end
optparser.parse!


unless options[:binary_name] && options[:binary_version] && (
    options[:sha256] ||
    options[:md5] ||
    (options[:gpg][:signature] && options[:gpg][:key_id])
)
  raise optparser.help
end

recipe  = nil
case options[:binary_name]
when "ruby"
 recipe = RubyRecipe.new('ruby', options[:binary_version])
 binding.pry
when "node"
 recipe = NodeRecipe.new('node', options[:binary_version])
end

checksum = ([:md5, :sha256, :gpg] & options.keys).first

recipe.files << {
  url: recipe.url,
  checksum => options[checksum]
}
Bundler.with_clean_env { recipe.cook }
